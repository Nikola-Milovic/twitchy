// Code generated by MockGen. DO NOT EDIT.
// Source: ./account_client.go

// Package mock_client is a generated GoMock package.
package mock_client

import (
	event "nikolamilovic/twitchy/auth/model/event"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIAccountClient is a mock of IAccountClient interface.
type MockIAccountClient struct {
        ctrl     *gomock.Controller
        recorder *MockIAccountClientMockRecorder
}

// MockIAccountClientMockRecorder is the mock recorder for MockIAccountClient.
type MockIAccountClientMockRecorder struct {
        mock *MockIAccountClient
}

// NewMockIAccountClient creates a new mock instance.
func NewMockIAccountClient(ctrl *gomock.Controller) *MockIAccountClient {
        mock := &MockIAccountClient{ctrl: ctrl}
        mock.recorder = &MockIAccountClientMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAccountClient) EXPECT() *MockIAccountClientMockRecorder {
        return m.recorder
}

// PublishAccountCreatedEvent mocks base method.
func (m *MockIAccountClient) PublishAccountCreatedEvent(event event.AccountCreatedEvent) error {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "PublishAccountCreatedEvent", event)
        ret0, _ := ret[0].(error)
        return ret0
}

// PublishAccountCreatedEvent indicates an expected call of PublishAccountCreatedEvent.
func (mr *MockIAccountClientMockRecorder) PublishAccountCreatedEvent(event interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublishAccountCreatedEvent", reflect.TypeOf((*MockIAccountClient)(nil).PublishAccountCreatedEvent), event)
}